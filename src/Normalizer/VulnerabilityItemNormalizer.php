<?php

namespace Gyroscops\Harbor\Api\Normalizer;

use Jane\Component\JsonSchemaRuntime\Reference;
use Gyroscops\Harbor\Api\Runtime\Normalizer\CheckArray;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
class VulnerabilityItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    /**
     * @return bool
     */
    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Gyroscops\\Harbor\\Api\\Model\\VulnerabilityItem';
    }
    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && get_class($data) === 'Gyroscops\\Harbor\\Api\\Model\\VulnerabilityItem';
    }
    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = array())
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \Gyroscops\Harbor\Api\Model\VulnerabilityItem();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('project_id', $data) && $data['project_id'] !== null) {
            $object->setProjectId($data['project_id']);
        }
        elseif (\array_key_exists('project_id', $data) && $data['project_id'] === null) {
            $object->setProjectId(null);
        }
        if (\array_key_exists('repository_name', $data) && $data['repository_name'] !== null) {
            $object->setRepositoryName($data['repository_name']);
        }
        elseif (\array_key_exists('repository_name', $data) && $data['repository_name'] === null) {
            $object->setRepositoryName(null);
        }
        if (\array_key_exists('digest', $data) && $data['digest'] !== null) {
            $object->setDigest($data['digest']);
        }
        elseif (\array_key_exists('digest', $data) && $data['digest'] === null) {
            $object->setDigest(null);
        }
        if (\array_key_exists('tags', $data) && $data['tags'] !== null) {
            $values = array();
            foreach ($data['tags'] as $value) {
                $values[] = $value;
            }
            $object->setTags($values);
        }
        elseif (\array_key_exists('tags', $data) && $data['tags'] === null) {
            $object->setTags(null);
        }
        if (\array_key_exists('cve_id', $data) && $data['cve_id'] !== null) {
            $object->setCveId($data['cve_id']);
        }
        elseif (\array_key_exists('cve_id', $data) && $data['cve_id'] === null) {
            $object->setCveId(null);
        }
        if (\array_key_exists('severity', $data) && $data['severity'] !== null) {
            $object->setSeverity($data['severity']);
        }
        elseif (\array_key_exists('severity', $data) && $data['severity'] === null) {
            $object->setSeverity(null);
        }
        if (\array_key_exists('cvss_v3_score', $data) && $data['cvss_v3_score'] !== null) {
            $object->setCvssV3Score($data['cvss_v3_score']);
        }
        elseif (\array_key_exists('cvss_v3_score', $data) && $data['cvss_v3_score'] === null) {
            $object->setCvssV3Score(null);
        }
        if (\array_key_exists('package', $data) && $data['package'] !== null) {
            $object->setPackage($data['package']);
        }
        elseif (\array_key_exists('package', $data) && $data['package'] === null) {
            $object->setPackage(null);
        }
        if (\array_key_exists('version', $data) && $data['version'] !== null) {
            $object->setVersion($data['version']);
        }
        elseif (\array_key_exists('version', $data) && $data['version'] === null) {
            $object->setVersion(null);
        }
        if (\array_key_exists('fixed_version', $data) && $data['fixed_version'] !== null) {
            $object->setFixedVersion($data['fixed_version']);
        }
        elseif (\array_key_exists('fixed_version', $data) && $data['fixed_version'] === null) {
            $object->setFixedVersion(null);
        }
        if (\array_key_exists('desc', $data) && $data['desc'] !== null) {
            $object->setDesc($data['desc']);
        }
        elseif (\array_key_exists('desc', $data) && $data['desc'] === null) {
            $object->setDesc(null);
        }
        if (\array_key_exists('links', $data) && $data['links'] !== null) {
            $values_1 = array();
            foreach ($data['links'] as $value_1) {
                $values_1[] = $value_1;
            }
            $object->setLinks($values_1);
        }
        elseif (\array_key_exists('links', $data) && $data['links'] === null) {
            $object->setLinks(null);
        }
        return $object;
    }
    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = array())
    {
        $data = array();
        if (null !== $object->getProjectId()) {
            $data['project_id'] = $object->getProjectId();
        }
        if (null !== $object->getRepositoryName()) {
            $data['repository_name'] = $object->getRepositoryName();
        }
        if (null !== $object->getDigest()) {
            $data['digest'] = $object->getDigest();
        }
        if (null !== $object->getTags()) {
            $values = array();
            foreach ($object->getTags() as $value) {
                $values[] = $value;
            }
            $data['tags'] = $values;
        }
        if (null !== $object->getCveId()) {
            $data['cve_id'] = $object->getCveId();
        }
        if (null !== $object->getSeverity()) {
            $data['severity'] = $object->getSeverity();
        }
        if (null !== $object->getCvssV3Score()) {
            $data['cvss_v3_score'] = $object->getCvssV3Score();
        }
        if (null !== $object->getPackage()) {
            $data['package'] = $object->getPackage();
        }
        if (null !== $object->getVersion()) {
            $data['version'] = $object->getVersion();
        }
        if (null !== $object->getFixedVersion()) {
            $data['fixed_version'] = $object->getFixedVersion();
        }
        if (null !== $object->getDesc()) {
            $data['desc'] = $object->getDesc();
        }
        if (null !== $object->getLinks()) {
            $values_1 = array();
            foreach ($object->getLinks() as $value_1) {
                $values_1[] = $value_1;
            }
            $data['links'] = $values_1;
        }
        return $data;
    }
}